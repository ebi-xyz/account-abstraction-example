/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TokenPaymaster,
  TokenPaymasterInterface,
  OracleHelper,
  UniswapHelper,
} from "../../../../@account-abstraction/contracts/samples/TokenPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_wrappedNative",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_uniswap",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "priceMarkup",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "minEntryPointBalance",
            type: "uint128",
          },
          {
            internalType: "uint48",
            name: "refundPostopCost",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "priceMaxAge",
            type: "uint48",
          },
        ],
        internalType: "struct TokenPaymaster.TokenPaymasterConfig",
        name: "_tokenPaymasterConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "cacheTimeToLive",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "maxOracleRoundAge",
            type: "uint48",
          },
          {
            internalType: "contract IOracle",
            name: "tokenOracle",
            type: "address",
          },
          {
            internalType: "contract IOracle",
            name: "nativeOracle",
            type: "address",
          },
          {
            internalType: "bool",
            name: "tokenToNativeOracle",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "tokenOracleReverse",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "nativeOracleReverse",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "priceUpdateThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct OracleHelper.OracleHelperConfig",
        name: "_oracleHelperConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minSwapAmount",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "uniswapPoolFee",
            type: "uint24",
          },
          {
            internalType: "uint8",
            name: "slippage",
            type: "uint8",
          },
        ],
        internalType: "struct UniswapHelper.UniswapHelperConfig",
        name: "_uniswapHelperConfig",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priceMarkup",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "minEntryPointBalance",
            type: "uint128",
          },
          {
            internalType: "uint48",
            name: "refundPostopCost",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "priceMaxAge",
            type: "uint48",
          },
        ],
        indexed: false,
        internalType: "struct TokenPaymaster.TokenPaymasterConfig",
        name: "tokenPaymasterConfig",
        type: "tuple",
      },
    ],
    name: "ConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cachedPriceTimestamp",
        type: "uint256",
      },
    ],
    name: "TokenPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
    ],
    name: "UniswapReverted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualTokenCharge",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualTokenPriceWithMarkup",
        type: "uint256",
      },
    ],
    name: "UserOperationSponsored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cachedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cachedPriceTimestamp",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priceMarkup",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "minEntryPointBalance",
            type: "uint128",
          },
          {
            internalType: "uint48",
            name: "refundPostopCost",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "priceMaxAge",
            type: "uint48",
          },
        ],
        internalType: "struct TokenPaymaster.TokenPaymasterConfig",
        name: "_tokenPaymasterConfig",
        type: "tuple",
      },
    ],
    name: "setTokenPaymasterConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minSwapAmount",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "uniswapPoolFee",
            type: "uint24",
          },
          {
            internalType: "uint8",
            name: "slippage",
            type: "uint8",
          },
        ],
        internalType: "struct UniswapHelper.UniswapHelperConfig",
        name: "_uniswapHelperConfig",
        type: "tuple",
      },
    ],
    name: "setUniswapConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPaymasterConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "priceMarkup",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "minEntryPointBalance",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "refundPostopCost",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "priceMaxAge",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "tokenToWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswap",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
    ],
    name: "updateCachedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "weiToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002dc438038062002dc483398101604081905262000035916200099d565b82888787858b33806200006357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200006e816200018b565b506200007a81620001db565b6001600160a01b0390811660805260405163095ea7b360e01b8152838216600482015260001960248201529085169063095ea7b3906044016020604051808303816000875af1158015620000d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f8919062000ab3565b506001600160a01b0380851660c05283811660e052821660a0526200015081805160015560208101516002805460409093015160ff1663010000000263ffffffff1990931662ffffff90921691909117919091179055565b505060001960035550620001669050816200029e565b5062000172846200059c565b6200017d8162000729565b505050505050505062000c36565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516301ffc9a760e01b815263122a0e9b60e31b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000227573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200024d919062000ab3565b6200029b5760405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d61746368000060448201526064016200005a565b50565b805160058054602084015160408501516001600160a01b039081166c01000000000000000000000000026001600160601b0365ffffffffffff9384166601000000000000026001600160601b031990951693909616929092179290921793909316929092179055606082015160068054608085015160a086015160c08701511515600160b01b0260ff60b01b19911515600160a81b029190911661ffff60a81b19921515600160a01b026001600160a81b0319909416959096169490941791909117169290921717905560e081015160078190556a52b7d2dcc80cd2e40000001015620003ce5760405162461bcd60e51b815260206004820152601e60248201527f54504d3a20757064617465207468726573686f6c6420746f6f2068696768000060448201526064016200005a565b6005600001600c9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044b919062000ad8565b6200045890600a62000c0b565b600880546001600160801b0319166001600160801b0392909216919091179055600654600160a01b900460ff1615620004fe576006546001600160a01b031615620004e65760405162461bcd60e51b815260206004820152601f60248201527f54504d3a206e6174697665206f7261636c65206d757374206265207a65726f0060448201526064016200005a565b600880546001600160801b0316600160801b17905550565b6006546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa15801562000549573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200056f919062000ad8565b6200057c90600a62000c0b565b600880546001600160801b03928316600160801b02921691909117905550565b620005a66200076a565b620005be6a52b7d2dcc80cd2e4000000600262000c1c565b81511115620006105760405162461bcd60e51b815260206004820152601a60248201527f54504d3a207072696365206d61726b757020746f6f206869676800000000000060448201526064016200005a565b80516a52b7d2dcc80cd2e400000011156200066e5760405162461bcd60e51b815260206004820152601960248201527f54504d3a207072696365206d61726b757020746f6f206c6f770000000000000060448201526064016200005a565b8051600981905560208083018051600a8054604080880180516060808b01805165ffffffffffff908116600160b01b0265ffffffffffff60b01b19948216600160801b026001600160b01b03199098166001600160801b039a8b161797909717939093169590951790955582519889529551909416958701959095529151831685850152905190911690830152517fcd938817f1c47094d43be3d07e8c67e11766db2e11a2b4376e7ee937b15793a29181900360800190a150565b620007336200076a565b6001600160a01b0381166200075f57604051631e4fbdf760e01b8152600060048201526024016200005a565b6200029b816200018b565b6000546001600160a01b03163314620007995760405163118cdaa760e01b81523360048201526024016200005a565b565b6001600160a01b03811681146200029b57600080fd5b604051608081016001600160401b0381118282101715620007e257634e487b7160e01b600052604160045260246000fd5b60405290565b805165ffffffffffff81168114620007ff57600080fd5b919050565b8051620007ff816200079b565b80518015158114620007ff57600080fd5b60006101008083850312156200083757600080fd5b604051908101906001600160401b03821181831017156200086857634e487b7160e01b600052604160045260246000fd5b816040528092506200087a84620007e8565b81526200088a60208501620007e8565b602082015260408401519150620008a1826200079b565b816040820152620008b56060850162000804565b6060820152620008c86080850162000811565b6080820152620008db60a0850162000811565b60a0820152620008ee60c0850162000811565b60c082015260e084015160e0820152505092915050565b805160ff81168114620007ff57600080fd5b6000606082840312156200092a57600080fd5b604051606081016001600160401b03811182821017156200095b57634e487b7160e01b600052604160045260246000fd5b806040525080915082518152602083015162ffffff811681146200097e57600080fd5b6020820152620009916040840162000905565b60408201525092915050565b600080600080600080600080888a03610280811215620009bc57600080fd5b8951620009c9816200079b565b60208b0151909950620009dc816200079b565b60408b0151909850620009ef816200079b565b60608b015190975062000a02816200079b565b95506080607f198201121562000a1757600080fd5b5062000a22620007b1565b60808a0151815260a08a01516001600160801b038116811462000a4457600080fd5b602082015262000a5760c08b01620007e8565b604082015262000a6a60e08b01620007e8565b6060820152935062000a818a6101008b0162000822565b925062000a938a6102008b0162000917565b915062000aa46102608a0162000804565b90509295985092959890939650565b60006020828403121562000ac657600080fd5b62000ad18262000811565b9392505050565b60006020828403121562000aeb57600080fd5b62000ad18262000905565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000b4d57816000190482111562000b315762000b3162000af6565b8085161562000b3f57918102915b93841c939080029062000b11565b509250929050565b60008262000b665750600162000c05565b8162000b755750600062000c05565b816001811462000b8e576002811462000b995762000bb9565b600191505062000c05565b60ff84111562000bad5762000bad62000af6565b50506001821b62000c05565b5060208310610133831016604e8410600b841016171562000bde575081810a62000c05565b62000bea838362000b0c565b806000190482111562000c015762000c0162000af6565b0290505b92915050565b600062000ad160ff84168362000b55565b808202811582820484141762000c055762000c0562000af6565b60805160a05160c05160e0516120dd62000ce7600039600081816104c301526117a001526000818161054d01528181610947015281816111de015281816113550152818161138f01526115da015260008181610212015281816117f3015261188901526000818161037201528181610591015281816106cf015281816109c301528181610a5d01528181610ace01528181610b5b0152818161100b0152818161154a015261161f01526120dd6000f3fe60806040526004361061016a5760003560e01c8063b0d691fe116100d1578063d7a23b3c1161008a578063f14d64ed11610064578063f14d64ed146104e5578063f2fde38b14610505578063f60fdcb314610525578063fc0c546a1461053b57600080fd5b8063d7a23b3c1461045b578063e1d8153c1461047b578063eb6d3a11146104b157600080fd5b8063b0d691fe14610360578063bb9fe6bf14610394578063c23a5cea146103a9578063c399ec88146103c9578063cb721cfd146103de578063d0e30db01461045357600080fd5b8063715018a611610123578063715018a6146102ad5780637c627b21146102c25780637c986aac146102e25780638da5cb5b146103025780639e281a9814610320578063a0840fa71461034057600080fd5b80630396cb60146101ab5780631b9a91a4146101c0578063205c2878146101e05780632681f7e4146102005780633ba9290f1461025157806352b7512c1461027f57600080fd5b366101a65760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b6101be6101b9366004611af1565b61056f565b005b3480156101cc57600080fd5b506101be6101db366004611b2c565b6105fa565b3480156101ec57600080fd5b506101be6101fb366004611b2c565b6106a1565b34801561020c57600080fd5b506102347f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561025d57600080fd5b5061027161026c366004611b66565b610713565b604051908152602001610248565b34801561028b57600080fd5b5061029f61029a366004611b83565b6108bc565b604051610248929190611bfb565b3480156102b957600080fd5b506101be6108df565b3480156102ce57600080fd5b506101be6102dd366004611c36565b6108f3565b3480156102ee57600080fd5b506102716102fd366004611cce565b61090f565b34801561030e57600080fd5b506000546001600160a01b0316610234565b34801561032c57600080fd5b506101be61033b366004611b2c565b61093a565b34801561034c57600080fd5b506101be61035b366004611cf0565b610971565b34801561036c57600080fd5b506102347f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a057600080fd5b506101be6109b9565b3480156103b557600080fd5b506101be6103c4366004611d75565b610a36565b3480156103d557600080fd5b50610271610ab6565b3480156103ea57600080fd5b50600954600a5461041d91906001600160801b0381169065ffffffffffff600160801b8204811691600160b01b90041684565b604080519485526001600160801b03909316602085015265ffffffffffff91821692840192909252166060820152608001610248565b6101be610b46565b34801561046757600080fd5b50610271610476366004611cce565b610ba8565b34801561048757600080fd5b5060045461049a9065ffffffffffff1681565b60405165ffffffffffff9091168152602001610248565b3480156104bd57600080fd5b506102347f000000000000000000000000000000000000000000000000000000000000000081565b3480156104f157600080fd5b506101be610500366004611dad565b610bc0565b34801561051157600080fd5b506101be610520366004611d75565b610d45565b34801561053157600080fd5b5061027160035481565b34801561054757600080fd5b506102347f000000000000000000000000000000000000000000000000000000000000000081565b610577610d80565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b1580156105de57600080fd5b505af11580156105f2573d6000803e3d6000fd5b505050505050565b610602610d80565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461064f576040519150601f19603f3d011682016040523d82523d6000602084013e610654565b606091505b505090508061069c5760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b60448201526064015b60405180910390fd5b505050565b6106a9610d80565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156105de57600080fd5b60055460045460009165ffffffffffff908116918391610734911642611e55565b9050831580156107445750818111155b1561075457505060035492915050565b600754600554600654600354600160601b9092046001600160a01b0390811692911690600061078284610dad565b600654909150600190600160a01b900460ff166107a5576107a284610dad565b90505b6006546000906107cc908490849060ff600160a81b8204811691600160b01b900416610f3b565b90506000846107e6836a52b7d2dcc80cd2e4000000611e68565b6107f09190611e95565b905060008c806108135750610810896a52b7d2dcc80cd2e4000000611eb7565b82115b80610831575061082e896a52b7d2dcc80cd2e4000000611e55565b82105b9050806108495750939b9a5050505050505050505050565b60038390556004805465ffffffffffff19164265ffffffffffff169081179091556040805185815260208101899052908101919091527ed4fe314618b73a96886b87817a53a5ed51433b0234c85a5e9dafe2cb7b88429060600160405180910390a150909b9a5050505050505050505050565b606060006108c8611000565b6108d3858585611070565b91509150935093915050565b6108e7610d80565b6108f1600061128d565b565b6108fb611000565b61090885858585856112dd565b5050505050565b6000816109276a52b7d2dcc80cd2e400000085611e68565b6109319190611e95565b90505b92915050565b610942610d80565b61096d7f0000000000000000000000000000000000000000000000000000000000000000838361141b565b5050565b610979610d80565b6109b681805160015560208101516002805460409093015160ff1663010000000263ffffffff1990931662ffffff90921691909117919091179055565b50565b6109c1610d80565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a1c57600080fd5b505af1158015610a30573d6000803e3d6000fd5b50505050565b610a3e610d80565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea906024015b600060405180830381600087803b158015610aa257600080fd5b505af1158015610908573d6000803e3d6000fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b419190611eca565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b158015610aa257600080fd5b60006a52b7d2dcc80cd2e40000006109278385611e68565b610bc8610d80565b610bde6a52b7d2dcc80cd2e40000006002611e68565b81511115610c2e5760405162461bcd60e51b815260206004820152601a60248201527f54504d3a207072696365206d61726b757020746f6f20686967680000000000006044820152606401610693565b80516a52b7d2dcc80cd2e40000001115610c8a5760405162461bcd60e51b815260206004820152601960248201527f54504d3a207072696365206d61726b757020746f6f206c6f77000000000000006044820152606401610693565b8051600981905560208083018051600a8054604080880180516060808b01805165ffffffffffff908116600160b01b0265ffffffffffff60b01b19948216600160801b026001600160b01b03199098166001600160801b039a8b161797909717939093169590951790955582519889529551909416958701959095529151831685850152905190911690830152517fcd938817f1c47094d43be3d07e8c67e11766db2e11a2b4376e7ee937b15793a29181900360800190a150565b610d4d610d80565b6001600160a01b038116610d7757604051631e4fbdf760e01b815260006004820152602401610693565b6109b68161128d565b6000546001600160a01b031633146108f15760405163118cdaa760e01b8152336004820152602401610693565b6000806000806000856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e179190611efd565b94509450509350935060008313610e705760405162461bcd60e51b815260206004820152601960248201527f54504d3a20436861696e6c696e6b207072696365203c3d2030000000000000006044820152606401610693565b600554610e8f906601000000000000900465ffffffffffff1642611e55565b821015610ed65760405162461bcd60e51b81526020600482015260156024820152741514134e88125b98dbdb5c1b195d19481c9bdd5b99605a1b6044820152606401610693565b8369ffffffffffffffffffff168169ffffffffffffffffffff161015610f315760405162461bcd60e51b815260206004820152601060248201526f54504d3a205374616c6520707269636560801b6044820152606401610693565b5090949350505050565b60008215610f77576008548590610f66906001600160801b03166a52b7d2dcc80cd2e4000000611e68565b610f709190611e95565b9450610fa5565b6008546001600160801b0316610f98866a52b7d2dcc80cd2e4000000611e68565b610fa29190611e95565b94505b8115610fd957600854600160801b90046001600160801b0316610fc88686611e68565b610fd29190611e95565b9050610ff8565b6008548490610fc890600160801b90046001600160801b031687611e68565b949350505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108f15760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606401610693565b60095460609060009081603461108960e0890189611f4d565b9050039050806000148061109d5750806020145b6110e95760405162461bcd60e51b815260206004820152601860248201527f54504d3a20696e76616c69642064617461206c656e67746800000000000000006044820152606401610693565b60006110f48861147a565b600a54909150600160801b900465ffffffffffff166111128961148f565b81106111605760405162461bcd60e51b815260206004820152601b60248201527f54504d3a20706f73744f704761734c696d697420746f6f206c6f7700000000006044820152606401610693565b6000828202880190506000856a52b7d2dcc80cd2e4000000600354028161118957611189611e7f565b049050846020036111cb5760006111a360e08d018d611f4d565b6111b291605491603491611f9b565b6111bb91611fc5565b9050818110156111c9578091505b505b60006111d7838361090f565b90506112117f000000000000000000000000000000000000000000000000000000000000000061120a60208f018f611d75565b30846114bf565b8061121f60208e018e611d75565b6040516020016112429291909182526001600160a01b0316602082015260400190565b60408051808303601f19018152919052600a54600454919a5061127c91600091600160b01b900465ffffffffffff908116911601816114f8565b975050505050505050935093915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6009546000806112ef86880188611fe3565b9150915060006112ff6000610713565b90506000846a52b7d2dcc80cd2e400000083028161131f5761131f611e7f565b600a549190049150600160801b900465ffffffffffff16860287016000611346828461090f565b9050808611156113825761137d7f00000000000000000000000000000000000000000000000000000000000000008683890361141b565b6113b8565b808610156113b8576113b87f000000000000000000000000000000000000000000000000000000000000000086308985036114bf565b60408051828152602081018b90529081018490526001600160a01b038616907f46caa0511cf037f06f57a0bf273a2ff04229f5b12fb04675234a6cbe2e7f1a899060600160405180910390a261140d84611532565b505050505050505050505050565b6040516001600160a01b0383811660248301526044820183905261069c91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061168a565b60006001600160801b0360c083013516610934565b600061149e60e0830183611f4d565b6114ad91603491602491611f9b565b6114b691612013565b60801c92915050565b6040516001600160a01b038481166024830152838116604483015260648201839052610a309186918216906323b872dd90608401611448565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85611520576000611523565b60015b60ff16171790505b9392505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bd9190611eca565b600a549091506001600160801b031681101561096d5760006115ff7f0000000000000000000000000000000000000000000000000000000000000000846116ed565b905061160a816117d7565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99047906024016000604051808303818588803b15801561166c57600080fd5b505af1158015611680573d6000803e3d6000fd5b5050505050505050565b600061169f6001600160a01b0384168361182a565b905080516000141580156116c45750808060200190518101906116c2919061204c565b155b1561069c57604051635274afe760e01b81526001600160a01b0384166004820152602401610693565b6040516370a0823160e01b815230600482015260009081906001600160a01b038516906370a0823190602401602060405180830381865afa158015611736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175a9190611eca565b9050600061177d61176b8386610ba8565b6002546301000000900460ff16611838565b60015490915081101561179557600092505050610934565b6002546117ce9086907f0000000000000000000000000000000000000000000000000000000000000000908590859062ffffff16611858565b95945050505050565b60405163125012df60e21b8152600481018290523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906349404b7c90604401610a88565b6060610931838360006119cf565b60006103e861184a60ff841682612069565b6109279061ffff1685611e68565b60408051610100810182526001600160a01b0387811682528681166020830190815262ffffff8581168486019081527f0000000000000000000000000000000000000000000000000000000000000000841660608601818152426080880190815260a088018c815260c089018c8152600060e08b018181529b5163414bf38960e01b81528b518b16600482015298518a1660248a0152955190961660448801529151871660648701525160848601525160a4850152915160c4840152945190921660e482015263414bf38990610104016020604051808303816000875af1925050508015611963575060408051601f3d908101601f1916820190925261196091810190611eca565b60015b6119c257604080516001600160a01b03808a16825288166020820152908101869052606081018590527ff7edd4c6ec425decf715a8b8eaa3b65d3d86e31ad0ff750aa60fa834190f515f9060800160405180910390a1600091506119c5565b91505b5095945050505050565b6060814710156119f45760405163cd78605960e01b8152306004820152602401610693565b600080856001600160a01b03168486604051611a10919061208b565b60006040518083038185875af1925050503d8060008114611a4d576040519150601f19603f3d011682016040523d82523d6000602084013e611a52565b606091505b5091509150611a62868383611a6c565b9695505050505050565b606082611a8157611a7c82611ac8565b61152b565b8151158015611a9857506001600160a01b0384163b155b15611ac157604051639996b31560e01b81526001600160a01b0385166004820152602401610693565b508061152b565b805115611ad85780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b600060208284031215611b0357600080fd5b813563ffffffff8116811461152b57600080fd5b6001600160a01b03811681146109b657600080fd5b60008060408385031215611b3f57600080fd5b8235611b4a81611b17565b946020939093013593505050565b80151581146109b657600080fd5b600060208284031215611b7857600080fd5b813561152b81611b58565b600080600060608486031215611b9857600080fd5b833567ffffffffffffffff811115611baf57600080fd5b84016101208187031215611bc257600080fd5b95602085013595506040909401359392505050565b60005b83811015611bf2578181015183820152602001611bda565b50506000910152565b6040815260008351806040840152611c1a816060850160208801611bd7565b602083019390935250601f91909101601f191601606001919050565b600080600080600060808688031215611c4e57600080fd5b853560038110611c5d57600080fd5b9450602086013567ffffffffffffffff80821115611c7a57600080fd5b818801915088601f830112611c8e57600080fd5b813581811115611c9d57600080fd5b896020828501011115611caf57600080fd5b9699602092909201985095966040810135965060600135945092505050565b60008060408385031215611ce157600080fd5b50508035926020909101359150565b600060608284031215611d0257600080fd5b6040516060810181811067ffffffffffffffff82111715611d3357634e487b7160e01b600052604160045260246000fd5b60405282358152602083013562ffffff81168114611d5057600080fd5b6020820152604083013560ff81168114611d6957600080fd5b60408201529392505050565b600060208284031215611d8757600080fd5b813561152b81611b17565b803565ffffffffffff81168114611da857600080fd5b919050565b600060808284031215611dbf57600080fd5b6040516080810181811067ffffffffffffffff82111715611df057634e487b7160e01b600052604160045260246000fd5b6040528235815260208301356001600160801b0381168114611e1157600080fd5b6020820152611e2260408401611d92565b6040820152611e3360608401611d92565b60608201529392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561093457610934611e3f565b808202811582820484141761093457610934611e3f565b634e487b7160e01b600052601260045260246000fd5b600082611eb257634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561093457610934611e3f565b600060208284031215611edc57600080fd5b5051919050565b805169ffffffffffffffffffff81168114611da857600080fd5b600080600080600060a08688031215611f1557600080fd5b611f1e86611ee3565b9450602086015193506040860151925060608601519150611f4160808701611ee3565b90509295509295909350565b6000808335601e19843603018112611f6457600080fd5b83018035915067ffffffffffffffff821115611f7f57600080fd5b602001915036819003821315611f9457600080fd5b9250929050565b60008085851115611fab57600080fd5b83861115611fb857600080fd5b5050820193919092039150565b8035602083101561093457600019602084900360031b1b1692915050565b60008060408385031215611ff657600080fd5b82359150602083013561200881611b17565b809150509250929050565b6fffffffffffffffffffffffffffffffff1981358181169160108510156120445780818660100360031b1b83161692505b505092915050565b60006020828403121561205e57600080fd5b815161152b81611b58565b61ffff82811682821603908082111561208457612084611e3f565b5092915050565b6000825161209d818460208701611bd7565b919091019291505056fea2646970667358221220567c9bef9fa717058602415d415f3df1717dad0e219051067f2bdb06db743e1764736f6c63430008170033";

type TokenPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenPaymaster__factory extends ContractFactory {
  constructor(...args: TokenPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _uniswap: PromiseOrValue<string>,
    _tokenPaymasterConfig: TokenPaymaster.TokenPaymasterConfigStruct,
    _oracleHelperConfig: OracleHelper.OracleHelperConfigStruct,
    _uniswapHelperConfig: UniswapHelper.UniswapHelperConfigStruct,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenPaymaster> {
    return super.deploy(
      _token,
      _entryPoint,
      _wrappedNative,
      _uniswap,
      _tokenPaymasterConfig,
      _oracleHelperConfig,
      _uniswapHelperConfig,
      _owner,
      overrides || {}
    ) as Promise<TokenPaymaster>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _uniswap: PromiseOrValue<string>,
    _tokenPaymasterConfig: TokenPaymaster.TokenPaymasterConfigStruct,
    _oracleHelperConfig: OracleHelper.OracleHelperConfigStruct,
    _uniswapHelperConfig: UniswapHelper.UniswapHelperConfigStruct,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _entryPoint,
      _wrappedNative,
      _uniswap,
      _tokenPaymasterConfig,
      _oracleHelperConfig,
      _uniswapHelperConfig,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): TokenPaymaster {
    return super.attach(address) as TokenPaymaster;
  }
  override connect(signer: Signer): TokenPaymaster__factory {
    return super.connect(signer) as TokenPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPaymasterInterface {
    return new utils.Interface(_abi) as TokenPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenPaymaster {
    return new Contract(address, _abi, signerOrProvider) as TokenPaymaster;
  }
}
